/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kaızen_uygulama;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import kaızen_uygulama.Beans.Durum_Bean;
import kaızen_uygulama.Beans.Kaızen_Bean;
import kaızen_uygulama.Beans.ıstatistik_Bean;

/**
 *
 * @author MFİ
 */
public class ıstatıstık_tablo_detay extends javax.swing.JFrame {

    int oluşturulud , ilkAmirOnayı , müdürOnayı , kaizenRehberOnayı , kaizenMüdür , tamamlandı, reddedildi , kabuledildi ;
    String secim = "",listeleP_SICIL , listeleP_ADI ,listeleP_SOYADI ;
    String P_SICIL = "", P_ID = "", P_ADI = "", P_SOYADI = "", P_ORG_ID = "", P_O_SEVİYE = "";
    String K_ID, K_ADI, K_KONU, K_BASV_TARH, K_TAMAM_TARH, K_SON_HARK_TARH, K_AÇIKLAMA, D_ADI;

    /**
     * Creates new form ıstatıstık_tablo_detay
     */
    public ıstatıstık_tablo_detay() {

    }

    public ıstatıstık_tablo_detay(String secim, String P_SICIL, String P_ID, String P_ADI, String P_SOYADI, String P_ORG_ID, String P_O_SEVİYE) {
        initComponents();
        this.secim = secim;
        this.P_SICIL = P_SICIL;
        this.P_ID = P_ID;
        this.P_ADI = P_ADI;
        this.P_SOYADI = P_SOYADI;
        this.P_ORG_ID = P_ORG_ID;
        this.P_O_SEVİYE = P_O_SEVİYE;
        show_Durum_Bean_List();
        show_Seviyeli_Bean_List();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        btnGrafik = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        Tablo_PERSONEL = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        Tablo_DURUM = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        Anasayfa = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 204, 255));

        btnGrafik.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnGrafik.setText("Grafik");
        btnGrafik.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGrafikActionPerformed(evt);
            }
        });

        Tablo_PERSONEL.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "P SİCİL", "P ADI  ", "P SOYADI", "K IDi", "K ADI", "K KONU", "K BASV TARH", "K TAMAM TARİH", "K SON HARKT TARH", "K AÇIKLAMA", "K DURUM"
            }
        ));
        Tablo_PERSONEL.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tablo_PERSONELMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(Tablo_PERSONEL);

        Tablo_DURUM.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OLUŞTURULDU", "İLK AMİR ONAYI", "MÜDÜR ONAYI", "KAİZEN REHBER ONAYI", "KAİZEN MÜDÜR ONAYI", "TAMAMLANDI", "RED EDİLDİ", "KABUL EDİLDİ"
            }
        ));
        Tablo_DURUM.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tablo_DURUMMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(Tablo_DURUM);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGrafik, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 784, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 319, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnGrafik, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        jMenu1.setText("Seçenekler");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        Anasayfa.setText("Anasayfa");
        Anasayfa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AnasayfaActionPerformed(evt);
            }
        });
        jMenu1.add(Anasayfa);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGrafikActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGrafikActionPerformed

        LayoutDemo lay=new  LayoutDemo(oluşturulud, ilkAmirOnayı, müdürOnayı, kaizenRehberOnayı, kaizenMüdür, tamamlandı, reddedildi, kabuledildi);
        lay.setVisible(true);
    }//GEN-LAST:event_btnGrafikActionPerformed

    private void Tablo_PERSONELMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tablo_PERSONELMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Tablo_PERSONELMouseClicked

    private void Tablo_DURUMMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tablo_DURUMMouseClicked

    }//GEN-LAST:event_Tablo_DURUMMouseClicked

    private void AnasayfaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AnasayfaActionPerformed
      System.out.println(P_SICIL);
        System.out.println(P_ID);
        System.out.println(P_ADI);
        System.out.println(P_SOYADI);
        System.out.println(P_ORG_ID);
        System.out.println(P_O_SEVİYE);
        Ana_Sayfa k=new Ana_Sayfa(P_ID, P_SICIL, P_ADI, P_SOYADI, P_ORG_ID, P_O_SEVİYE);
        setVisible(false);
        k.setVisible(true);
    }//GEN-LAST:event_AnasayfaActionPerformed

    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenu1ActionPerformed

    public  ArrayList<Durum_Bean> İstatitikOranYaz(String orgId, String orgSevId) {

        Connection con = null;
        String sorguKaizen = null;
        Statement st = null;
        ResultSet rs = null;
        ArrayList<Durum_Bean> Durum_Bean;
        Durum_Bean db;

        Durum_Bean = new ArrayList<Durum_Bean>();
         oluşturulud = 0;
         ilkAmirOnayı = 0;
         müdürOnayı = 0; kaizenRehberOnayı = 0; kaizenMüdür = 0 ;tamamlandı = 0; reddedildi = 0; kabuledildi = 0;

        sorguKaizen = "SELECT *  FROM KAIZEN_KAIZEN_TBL K  ,KAIZEN_PERSONEL_TBL P,KAIZEN_ISLEM_TBL I,KAIZEN_DURUM_TBL D,KAIZEN_ORGANIZASYON_TBL O,KAIZEN_O_SEVIYE_TBL S WHERE\r\n"
                + "(S.S_ID=" + orgSevId + ")AND(O.O_SEVIYE_ID=S.S_ID) AND (O.O_ID=P.P_ORG_ID) AND (P.P_SICIL=I.I_SICIL_ID)AND \r\n"
                + "(I.I_KAIZ_ID=K.K_ID) AND (I.I_DURUM_ID=D.D_ID) AND (O.O_ID=" + orgId + ")";

        try {//burada bean sayfalarına atıyorum
            con = Kaızen_Uygulama.getConnection_Kaizen_Db();
            st = con.createStatement();
            rs = st.executeQuery(sorguKaizen);
            String test = "";
            while (rs.next()) {

                test = rs.getString("D_ID");

                if (test.equals("1")) {
                    oluşturulud++;
                } else if (test.equals("2")) {
                    ilkAmirOnayı++;

                } else if (test.equals("3")) {
                    müdürOnayı++;

                } else if (test.equals("4")) {
                    kaizenRehberOnayı++;

                } else if (test.equals("5")) {
                    kaizenMüdür++;

                } else if (test.equals("6")) {
                    tamamlandı++;

                } else if (test.equals("7")) {
                    reddedildi++;

                } else if (test.equals("8")) {
                    kabuledildi++;

                }
}
            db = new Durum_Bean(oluşturulud, ilkAmirOnayı, müdürOnayı, kaizenRehberOnayı, kaizenMüdür, tamamlandı, reddedildi, kabuledildi);
            Durum_Bean.add(db);

        } catch (Exception e) {
            // TODO: handle exception
        }
        return Durum_Bean;
    }

    public void show_Durum_Bean_List() {
        ArrayList<Durum_Bean> list = new ArrayList<>();
        int OrgId = Integer.valueOf(P_ORG_ID);
        int seviye = Integer.valueOf(P_O_SEVİYE);
        //stajyer için seçim  gibi seviyeli seçme koşulları
        if (P_O_SEVİYE.equals("1")) {

        } //mühendis için
        else if (P_O_SEVİYE.equals("2")) {
            if (secim.equals("Stajyer")) {
                OrgId = OrgId - 1;
                seviye = seviye - 1;
            } else if (secim.equals("Mühendis")) {

            }

        } else if (P_O_SEVİYE.equals("3")) {
            if (secim.equals("Stajyer")) {
                OrgId = OrgId - 2;
                seviye = seviye - 2;
            } else if (secim.equals("Mühendis")) {
                OrgId = OrgId - 1;
                seviye = seviye - 1;
            } else if (secim.equals("Baş Mühendis")) {

            }
        } else if (P_O_SEVİYE.equals("4")) {
            if (secim.equals("Stajyer")) {
                OrgId = OrgId - 3;
                seviye = seviye - 3;
            } else if (secim.equals("Mühendis")) {
                OrgId = OrgId - 2;
                seviye = seviye - 2;
            } else if (secim.equals("Baş Mühendis")) {
                OrgId = OrgId - 1;
                seviye = seviye - 1;
            } else if (secim.equals("Müdür")) {
            }

        }
        String gönderOrg = String.valueOf(OrgId);
        String göndersev = String.valueOf(seviye);
        list = İstatitikOranYaz(gönderOrg, göndersev);
        //burada depoladığım kaizen bilgilerini atadım
        DefaultTableModel model = (DefaultTableModel) Tablo_DURUM.getModel();
        Object[] row = new Object[8];
        //kolon sayısını belirledim

        for (int i = 0;
                i < list.size();
                i++) {
            row[0] = list.get(i).getOluşturulud();
            row[1] = list.get(i).getIlkAmirOnayı();
            row[2] = list.get(i).getMüdürOnayı();
            row[3] = list.get(i).getKaizenRehberOnayı();
            row[4] = list.get(i).getKaizenMüdür();
            row[5] = list.get(i).getTamamlandı();
            row[6] = list.get(i).getReddedildi();
            row[7] = list.get(i).getKabuledildi();

            model.addRow(row);

        }
    }

    
    
    
    public ArrayList<ıstatistik_Bean> IstatistikTablo(String orgId, String orgSevId) {

        Connection con = null;
        String sorguKaizen = null;
        Statement st = null;
        ResultSet rs = null;
        ıstatistik_Bean bean = null;
        ArrayList<ıstatistik_Bean> ıstatistik_Bean;

        sorguKaizen = "SELECT *  FROM KAIZEN_KAIZEN_TBL K  ,KAIZEN_PERSONEL_TBL P,KAIZEN_ISLEM_TBL I,KAIZEN_DURUM_TBL D,KAIZEN_ORGANIZASYON_TBL O,KAIZEN_O_SEVIYE_TBL S WHERE\r\n"
                + "(S.S_ID=" + orgSevId + ")AND(O.O_SEVIYE_ID=S.S_ID) AND (O.O_ID=P.P_ORG_ID) AND (P.P_SICIL=I.I_SICIL_ID)AND \r\n"
                + "(I.I_KAIZ_ID=K.K_ID) AND (I.I_DURUM_ID=D.D_ID) AND (O.O_ID=" + orgId + ")";
        ıstatistik_Bean = new ArrayList<ıstatistik_Bean>();

        try {
            con = Kaızen_Uygulama.getConnection_Kaizen_Db();
            st = con.createStatement();
            rs = st.executeQuery(sorguKaizen);

            while (rs.next()) {

                listeleP_SICIL = rs.getString("P_SICIL");
                listeleP_ADI = rs.getString("P_ADI");
                listeleP_SOYADI = rs.getString("P_SOYADI");
                K_ID = rs.getString("K_ID");
                K_ADI = rs.getString("K_ADI");
                K_KONU = rs.getString("K_KONU");
                K_BASV_TARH = rs.getString("K_BASV_TARH");
                K_TAMAM_TARH = rs.getString("K_TAMAM_TARH");
                K_SON_HARK_TARH = rs.getString("K_SON_HARK_TARH");
                D_ADI = rs.getString("D_ADI");
                bean = new ıstatistik_Bean(listeleP_SICIL, listeleP_ADI, listeleP_SOYADI, K_ID, K_ADI, K_KONU, K_BASV_TARH, K_TAMAM_TARH, K_SON_HARK_TARH, K_AÇIKLAMA, D_ADI);
                ıstatistik_Bean.add(bean);
            }

        } catch (Exception e) {
            // TODO: handle exception
        }
        return ıstatistik_Bean;
    }

    public void show_Seviyeli_Bean_List() {
        int OrgId = Integer.valueOf(P_ORG_ID);
        int seviye = Integer.valueOf(P_O_SEVİYE);
        //önce sayıya çevirip semi belirliyorum
        //stajyer için seçim  gibi seviyeli seçme koşulları
        if (P_O_SEVİYE.equals("1")) {

        } //mühendis için
        else if (P_O_SEVİYE.equals("2")) {
            if (secim.equals("Stajyer")) {
                OrgId = OrgId - 1;
                seviye = seviye - 1;
            } else if (secim.equals("Mühendis")) {

            }

        } else if (P_O_SEVİYE.equals("3")) {
            if (secim.equals("Stajyer")) {
                OrgId = OrgId - 2;
                seviye = seviye - 2;
            } else if (secim.equals("Mühendis")) {
                OrgId = OrgId - 1;
                seviye = seviye - 1;
            } else if (secim.equals("Baş Mühendis")) {

            }
        } else if (P_O_SEVİYE.equals("4")) {
            if (secim.equals("Stajyer")) {
                OrgId = OrgId - 3;
                seviye = seviye - 3;
            } else if (secim.equals("Mühendis")) {
                OrgId = OrgId - 2;
                seviye = seviye - 2;
            } else if (secim.equals("Baş Mühendis")) {
                OrgId = OrgId - 1;
                seviye = seviye - 1;
            } else if (secim.equals("Müdür")) {
            }

        }//en son stringe gei çevirip sorguta gönderiyorum
        String gönderOrg = String.valueOf(OrgId);
        String göndersev = String.valueOf(seviye);
        
         ArrayList<ıstatistik_Bean> list = new ArrayList<>();
        //çalıştırıyorum zaten istatistik sayfasını
        list = IstatistikTablo(gönderOrg, göndersev);
        //burada depoladığım kaizen bilgilerini atadım
        DefaultTableModel model = (DefaultTableModel) Tablo_PERSONEL.getModel();
        Object[] row = new Object[11];
        //kolon sayısını belirledim

        for (int i = 0; i < list.size(); i++) {
         row[0] = list.get(i).getP_SICIL();
            row[1] = list.get(i).getP_ADI();
            row[2] = list.get(i).getP_SOYADI();
            row[3] = list.get(i).getK_ID();
            row[4] = list.get(i).getK_ADI();
            row[5] = list.get(i).getK_KONU();
            row[6] = list.get(i).getK_BASV_TARH();
            row[7] = list.get(i).getK_TAMAM_TARH();
            row[8] = list.get(i).getK_SON_HARK_TARH();
            row[9] = list.get(i).getK_AÇIKLAMA();
            row[10] = list.get(i).getD_ADI();
            model.addRow(row);

        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ıstatıstık_tablo_detay.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ıstatıstık_tablo_detay.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ıstatıstık_tablo_detay.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ıstatıstık_tablo_detay.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ıstatıstık_tablo_detay().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem Anasayfa;
    private javax.swing.JTable Tablo_DURUM;
    private javax.swing.JTable Tablo_PERSONEL;
    private javax.swing.JButton btnGrafik;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    // End of variables declaration//GEN-END:variables
}
